<startOther>
#include <Adafruit_CC3000.h>
#include <ccspi.h>
#include <SPI.h>
#include <string.h>
#include "utility/debug.h"

#define ADAFRUIT_CC3000_IRQ   3  // MUST be an interrupt pin!
// These can be any two pins
#define ADAFRUIT_CC3000_VBAT  5
#define ADAFRUIT_CC3000_CS    10
// Use hardware SPI for the remaining pins
// On an UNO, SCK = 13, MISO = 12, and MOSI = 11
Adafruit_CC3000 cc3000 = Adafruit_CC3000(ADAFRUIT_CC3000_CS, ADAFRUIT_CC3000_IRQ, ADAFRUIT_CC3000_VBAT,
                                         SPI_CLOCK_DIVIDER); // you can change this clock speed

#define WLAN_SSID       "CPL"           // cannot be longer than 32 characters!
#define WLAN_PASS       "protocol309a"
// Security can be WLAN_SEC_UNSEC, WLAN_SEC_WEP, WLAN_SEC_WPA or WLAN_SEC_WPA2
#define WLAN_SECURITY   WLAN_SEC_WPA2

#define IDLE_TIMEOUT_MS  3000      // Amount of time to wait (in milliseconds) with no data 
                                   // received before closing the connection.  If you know the server
                                   // you're accessing is quick to respond, you can reduce this value.

#define WEBSITE      "@<param1>"

uint32_t ip;
uint32_t port = @<param2>; 

<endOther>

<startSetup>
Serial.println(F("\nInitializing..."));
if (!cc3000.begin())
{
    Serial.println(F("Couldn't begin()! Check your wiring?"));
    while(1);
}

Serial.print(F("\nAttempting to connect to ")); Serial.println(WLAN_SSID);
if (!cc3000.connectToAP(WLAN_SSID, WLAN_PASS, WLAN_SECURITY)) {
    Serial.println(F("Failed!"));
    while(1);
}

Serial.println(F("Connected!"));

while (!cc3000.checkDHCP())
{
    delay(100); // ToDo: Insert a DHCP timeout!
}  

ip = 0;
while (ip == 0) {
    ip = cc3000.IP2U32(155 , 230 , 105 , 168);
    delay(100);
}

cc3000.printIPdotsRev(ip);

Adafruit_CC3000_Client www = cc3000.connectTCP(ip, port);
<endSetup>

<startLoop>
<endLoop>

<startLocation>
<endLocation>
